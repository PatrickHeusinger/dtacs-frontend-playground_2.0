stages:
  - build
  - sbom
  - upload

variables:
  IMAGE_NAME: my-app
  VERSION: "${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}"
  PARENT_UUID: 484f553b-1a01-41f2-922f-96af4e8b73c2
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

build-docker:
  stage: build
  image: docker:24
  services:
    - docker:24-dind
  script:
    - echo "Building image $IMAGE_NAME:$VERSION"
    - docker build --build-arg BUILD_HOME=/build --build-arg APP_HOME=/seidr -t $IMAGE_NAME:$VERSION .
  artifacts:
  # Optional: falls du das Image exportieren willst, aber meist nicht n√∂tig
  # - save image as tar (meist kein use case hier)
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_TAG'

generate-sbom:
  stage: sbom
  image: aquasec/trivy:latest
  services:
    - docker:24-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  dependencies:
    - build-docker
  script:
    - echo "Generating SBOM for $IMAGE_NAME:$VERSION"
    - trivy image --format cyclonedx --output dependency-results.sbom.json $IMAGE_NAME:$VERSION
  artifacts:
    paths:
      - dependency-results.sbom.json
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_TAG'

upload-sbom:
  stage: upload
  image: curlimages/curl:latest
  dependencies:
    - generate-sbom
  script:
    - echo "Uploading SBOM to Dependency-Track..."
    - |
      curl -L -X POST "https://dtrack.datatactics.dev/api/v1/bom" \
        -H 'Content-Type: multipart/form-data' \
        -H "X-API-Key: $DTRACK_API_KEY" \
        -F "autoCreate=true" \
        -F "projectName=$IMAGE_NAME" \
        -F "projectVersion=$VERSION" \
        -F "parentUUID=$PARENT_UUID" \
        -F "bom=@dependency-results.sbom.json"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_TAG'
