stages:
  - build
  - upload

variables:
  IMAGE_NAME: dt/playground
  VERSION: "${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}"
  PARENT_UUID: 484f553b-1a01-41f2-922f-96af4e8b73c2
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

build-and-sbom:
  stage: build
  image: docker:24
  services:
    - docker:24-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    - export VERSION=${CI_COMMIT_TAG:-${CI_COMMIT_SHORT_SHA:-latest}}
    - echo "Building image $IMAGE_NAME:$VERSION"
    - docker build --build-arg BUILD_HOME=/build --build-arg APP_HOME=/seidr -t $IMAGE_NAME:$VERSION .

    # Install Trivy
    - apk add --no-cache curl bash
    - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

    # SBOM erstellen
    - echo "Generating SBOM for $IMAGE_NAME:$VERSION"
    - trivy image --format cyclonedx --output dependency-results --scanners vuln,secret,misconfig $IMAGE_NAME:$VERSION
    - cat dependency-results
    - echo "Removing image to keep environment clean"
    - docker rmi $IMAGE_NAME:$VERSION
  artifacts:
    paths:
      - dependency-results
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_TAG'

upload-sbom:
  stage: upload
  image: curlimages/curl:latest
  dependencies:
    - build-and-sbom
  script:
    - echo "Uploading SBOM to Dependency-Track..."
    - |
      curl -L -X POST "https://dtrack.datatactics.dev/api/v1/bom" \
        -H 'Content-Type: multipart/form-data' \
        -H "X-API-Key: $DTRACK_API_KEY" \
        -F "autoCreate=true" \
        -F "projectName=$IMAGE_NAME" \
        -F "projectVersion=$VERSION" \
        -F "parentUUID=$PARENT_UUID" \
        -F "bom=@dependency-results"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_TAG'
